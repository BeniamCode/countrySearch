/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as CountriesRouteImport } from './routes/countries/route'
import { Route as CountriesIndexImport } from './routes/countries/index'
import { Route as CountriesCountryNameImport } from './routes/countries/$countryName'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const CountriesRouteRoute = CountriesRouteImport.update({
  path: '/countries',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const CountriesIndexRoute = CountriesIndexImport.update({
  path: '/',
  getParentRoute: () => CountriesRouteRoute,
} as any)

const CountriesCountryNameRoute = CountriesCountryNameImport.update({
  path: '/$countryName',
  getParentRoute: () => CountriesRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/countries': {
      id: '/countries'
      path: '/countries'
      fullPath: '/countries'
      preLoaderRoute: typeof CountriesRouteImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/countries/$countryName': {
      id: '/countries/$countryName'
      path: '/$countryName'
      fullPath: '/countries/$countryName'
      preLoaderRoute: typeof CountriesCountryNameImport
      parentRoute: typeof CountriesRouteImport
    }
    '/countries/': {
      id: '/countries/'
      path: '/'
      fullPath: '/countries/'
      preLoaderRoute: typeof CountriesIndexImport
      parentRoute: typeof CountriesRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  CountriesRouteRoute: CountriesRouteRoute.addChildren({
    CountriesCountryNameRoute,
    CountriesIndexRoute,
  }),
  SettingsRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/countries",
        "/settings"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/countries": {
      "filePath": "countries/route.tsx",
      "children": [
        "/countries/$countryName",
        "/countries/"
      ]
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/countries/$countryName": {
      "filePath": "countries/$countryName.tsx",
      "parent": "/countries"
    },
    "/countries/": {
      "filePath": "countries/index.tsx",
      "parent": "/countries"
    }
  }
}
ROUTE_MANIFEST_END */
